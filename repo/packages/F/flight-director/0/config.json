{
  "properties": {
    "service": {
      "description": "Configuration properties for the DC/OS Flight Director service",
      "type": "object",
      "properties": {
        "name": {
            "description": "Display name for the service on the DC/OS dashboard",
            "type": "string",
            "default": "flight-director"
        },
        "cpus": {
            "description": "CPU allocation for the Flight Director instance",
            "type": "number",
            "default": 0.5,
            "minimum": 0.1
        },
        "mem": {
            "description": "Memory (MB) allocation for the Flight Director instance",
            "type": "number",
            "default": 256.0,
            "minimum": 128.0
        },
        "chronos-master-host": {
          "description": "Chronos master hostname",
          "type": "string",
          "default": "chronos.marathon.mesos"
        },
        "chronos-master-port": {
          "description": "Chronos master port",
          "type": "integer"
        },
        "kv-server-host": {
          "description": "etcd hostname",
          "type": "string",
          "default": "etcd.marathon.mesos"
        },
        "kv-server-port": {
          "description": "etcd port",
          "type": "integer"
        }
      }
    },
    "flight-director": {
      "description": "Configuration properties for the Flight Director application",
      "properties": {
        "fd-api-server-port": {
          "description": "Flight Director API listener port",
          "type": "integer",
          "default": 2001
        },
        "fd-db-engine": {
          "description": "Database engine for Flight Director persistence",
          "type": "string",
          "default": "sqlite3"
        },
        "fd-db-path": {
          "description": "Flight Director SQLite3 database path",
          "type": "string",
          "default": "./fd.db"
        },
        "fd-db-database": {
          "description": "Flight Director MySQL database name",
          "type": "string"
        },
        "fd-db-username": {
          "description": "Flight Director MySQL database user",
          "type": "string"
        },
        "fd-db-password": {
          "description": "Flight Director MySQL database password",
          "type": "string"
        },
        "fd-drain-container-time": {
          "description": "Time (in seconds) to wait before killing old containers",
          "type": "integer",
          "default": 600
        },
        "fd-event-interface": {
          "description": "Network interface binding for event listener?",
          "type": "string"
        },
        "fd-event-port": {
          "description": "Port binding for event listener?",
          "type": "string"
        },
        "fd-fixtures": {
          "description": "Optional preload of demo data into Flight Director database",
          "type": "string",
          "default": "demo"
        },
        "fd-debug": {
          "description": "Toggle Flight Director debug output",
          "type": "boolean",
          "default": true
        },
        "authorizer-type": {
          "description": "Authentication provider for Flight Director v2 API resources",
          "type": "string",
          "default": "none"
        },
        "fd-proxy-port-range": {
          "description": "Port range for auto-assignment of Image proxy port mappings",
          "type": "string",
          "default": "41000:42000"
        },
        "fd-iamrole-label": {
          "description": "Docker label name for use with IAMRole proxy",
          "type": "string"
        },
        "fd-airlock-public-key": {
          "description": "Public key for decryption of Airlock JSON web tokens",
          "type": "string"
        }
      }
    },
    "advanced": {
      "description": "Advanced configuration parameters for Flight Director service",
      "type": "object",
      "properties": {
        "dockercfg-location": {
          "description": ".dockercfg location on Mesos agent nodes",
          "type": "string",
          "default": ""
        },
        "mesos-master-host": {
          "description": "Mesos master hostname",
          "type": "string",
          "default": "leader.mesos"
        },
        "mesos-master-port": {
          "description": "Mesos service port",
          "type": "integer",
          "default": 5050
        },
        "mesos-master-protocol": {
          "description": "Selection of HTTP or HTTPS for Mesos master communication",
          "type": "string",
          "default": "http"
        },
        "marathon-master-host": {
          "description": "Marathon master hostname",
          "type": "string",
          "default": "marathon.mesos"
        },
        "marathon-master-port": {
          "description": "Marathon service port",
          "type": "integer",
          "default": 8080
        },
        "marathon-master-protocol": {
          "description": "Selection of HTTP or HTTPS for Marathon master communication",
          "type": "string",
          "default": "http"
        },
        "marathon-allow-unverified-tls": {
          "description": "Allow Marathon API calls with invalid SSL configuration",
          "type": "boolean",
          "default": false
        },
        "marathon-user": {
          "description": "Username for authenticated Marathon API access",
          "type": "string"
        },
        "marathon-password": {
          "description": "Password for authenticated Marathon API access",
          "type": "string"
        },
        "marathon-log-api-calls": {
          "description": "Enable or disable verbose logging of Marathon API calls",
          "type": "boolean",
          "default": true
        },
        "chronos-master-protocol": {
          "description": "Selection of HTTP or HTTPS for Chronos master communication",
          "type": "string",
          "default": "http"
        },
        "etcd-username": {
            "description": "Username for authenticated etcd API access",
            "type": "string"
        },
        "etcd-password": {
          "description": "Password for authenticated etcd API access",
          "type": "string"
        }
      }
    }
  },
  "required": [
    "service"
  ]
}
